{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/xruiz/Downloads/builds2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    border: none;\\n    padding: 1em;\\n    cursor: pointer;\\n    background-color: \",\";\\n    color: \",\";\\n    border-radius: 20px;\\n    transition: .2s ease-in-out;\\n    &:hover {\\n        background-color: \",\";\\n        color: \",\";\\n    }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    border: none;\\n    padding: 0;\\n    cursor: pointer;\\n    a {\\n        background-color: \",\";\\n        color: \",\";\\n        padding: 1em;\\n        text-decoration: none;\\n        border-radius: 20px;\\n        transition: .2s ease-in-out;\\n        &:hover {\\n            background-color: \",\";\\n            color: \",\";\\n        }\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from\"styled-components\";import{Link}from'react-router-dom';var InternalButton=styled.button(_templateObject(),function(props){return props.backgroundColor||\"black\";},function(props){return props.color||\"white\";},function(props){return props.backgroundColorHover||\"#CC0000\";},function(props){return props.colorHover||\"white\";});var ActionButton=styled.button(_templateObject2(),function(props){return props.backgroundColor||\"black\";},function(props){return props.color||\"white\";},function(props){return props.backgroundColorHover||\"#CC0000\";},function(props){return props.colorHover||\"white\";});var Button=function Button(_ref){var link=_ref.link,type=_ref.type,action=_ref.action,alt=_ref.alt,text=_ref.text,color=_ref.color,backgroundColor=_ref.backgroundColor,colorHover=_ref.colorHover,backgroundColorHover=_ref.backgroundColorHover;if(type===\"internal\"){return/*#__PURE__*/React.createElement(InternalButton,{color:color,backgroundColor:backgroundColor,colorHover:colorHover,backgroundColorHover:backgroundColorHover},/*#__PURE__*/React.createElement(Link,{to:link,alt:\"\".concat(alt)},text));}else if(type===\"external\"){}else if(type===\"action\"){return/*#__PURE__*/React.createElement(ActionButton,{onClick:action,color:color,backgroundColor:backgroundColor,colorHover:colorHover,backgroundColorHover:backgroundColorHover},text);}return/*#__PURE__*/React.createElement(\"button\",null,\"Please pass a valid type of \\\"internal\\\", \\\"external\\\", or \\\"action\\\".\");};export default Button;","map":{"version":3,"sources":["/Users/xruiz/Downloads/builds2/src/components/UI/Button.jsx"],"names":["React","styled","Link","InternalButton","button","props","backgroundColor","color","backgroundColorHover","colorHover","ActionButton","Button","link","type","action","alt","text"],"mappings":"mgCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAIA,GAAMC,CAAAA,cAAc,CAAGF,MAAM,CAACG,MAAV,mBAMQ,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,eAAN,EAAyB,OAA7B,EANb,CAOH,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACE,KAAN,EAAe,OAAnB,EAPF,CAaY,SAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACG,oBAAN,EAA8B,SAAlC,EAbjB,CAcC,SAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACI,UAAN,EAAoB,OAAxB,EAdN,CAApB,CAmBA,GAAMC,CAAAA,YAAY,CAAGT,MAAM,CAACG,MAAV,oBAKM,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,eAAN,EAAyB,OAA7B,EALX,CAML,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACE,KAAN,EAAe,OAAnB,EANA,CAUU,SAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACG,oBAAN,EAA8B,SAAlC,EAVf,CAWD,SAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACI,UAAN,EAAoB,OAAxB,EAXJ,CAAlB,CAeA,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA+F,IAA7FC,CAAAA,IAA6F,MAA7FA,IAA6F,CAAvFC,IAAuF,MAAvFA,IAAuF,CAAjFC,MAAiF,MAAjFA,MAAiF,CAAzEC,GAAyE,MAAzEA,GAAyE,CAApEC,IAAoE,MAApEA,IAAoE,CAA9DT,KAA8D,MAA9DA,KAA8D,CAAvDD,eAAuD,MAAvDA,eAAuD,CAAtCG,UAAsC,MAAtCA,UAAsC,CAA1BD,oBAA0B,MAA1BA,oBAA0B,CAG1G,GAAGK,IAAI,GAAK,UAAZ,CAAwB,CACpB,mBACI,oBAAC,cAAD,EAAgB,KAAK,CAAEN,KAAvB,CAA8B,eAAe,CAAED,eAA/C,CAAgE,UAAU,CAAEG,UAA5E,CAAwF,oBAAoB,CAAED,oBAA9G,eACI,oBAAC,IAAD,EAAM,EAAE,CAAEI,IAAV,CAAgB,GAAG,WAAKG,GAAL,CAAnB,EACKC,IADL,CADJ,CADJ,CAOH,CARD,IAQO,IAAIH,IAAI,GAAK,UAAb,CAAyB,CAE/B,CAFM,IAEA,IAAIA,IAAI,GAAK,QAAb,CAAuB,CAC1B,mBACI,oBAAC,YAAD,EAAc,OAAO,CAAEC,MAAvB,CAA+B,KAAK,CAAEP,KAAtC,CAA6C,eAAe,CAAED,eAA9D,CAA+E,UAAU,CAAEG,UAA3F,CAAuG,oBAAoB,CAAED,oBAA7H,EACSQ,IADT,CADJ,CAKH,CACD,mBAAO,2GAAP,CACH,CArBD,CAiCA,cAAeL,CAAAA,MAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\n\n\nconst InternalButton = styled.button`\n    display: flex;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    a {\n        background-color: ${props => props.backgroundColor || \"black\"};\n        color: ${props => props.color || \"white\"};\n        padding: 1em;\n        text-decoration: none;\n        border-radius: 20px;\n        transition: .2s ease-in-out;\n        &:hover {\n            background-color: ${props => props.backgroundColorHover || \"#CC0000\"};\n            color: ${props => props.colorHover || \"white\"};\n        }\n    }\n`;\n\nconst ActionButton = styled.button`\n    display: flex;\n    border: none;\n    padding: 1em;\n    cursor: pointer;\n    background-color: ${props => props.backgroundColor || \"black\"};\n    color: ${props => props.color || \"white\"};\n    border-radius: 20px;\n    transition: .2s ease-in-out;\n    &:hover {\n        background-color: ${props => props.backgroundColorHover || \"#CC0000\"};\n        color: ${props => props.colorHover || \"white\"};\n    }\n`;\n\nconst Button = ({link, type, action, alt, text, color, backgroundColor, colorHover, backgroundColorHover}) => {\n    \n\n    if(type === \"internal\") {\n        return (\n            <InternalButton color={color} backgroundColor={backgroundColor} colorHover={colorHover} backgroundColorHover={backgroundColorHover}>\n                <Link to={link} alt={`${alt}`}>\n                    {text}\n                </Link>\n            </InternalButton>\n        )\n    } else if (type === \"external\") {\n\n    } else if (type === \"action\") {\n        return (\n            <ActionButton onClick={action} color={color} backgroundColor={backgroundColor} colorHover={colorHover} backgroundColorHover={backgroundColorHover}>                \n                    {text}\n            </ActionButton>\n        )\n    }\n    return <button>Please pass a valid type of \"internal\", \"external\", or \"action\".</button>\n}\n\nButton.propTypes = {\n    link: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    action: PropTypes.func,\n    alt: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    backgroundColor: PropTypes.string\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}