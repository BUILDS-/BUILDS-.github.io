{"ast":null,"code":"var _jsxFileName = \"/Users/xruiz/Downloads/builds2/src/components/UI/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nconst InternalButton = styled.button`\n    a {\n        background-color: ${props => props.backgroundColor || \"black\"}\n        color: ${props => props.color || \"white\"}\n    }\n`;\n\nconst Button = ({\n  link,\n  type,\n  action,\n  alt,\n  text,\n  color,\n  backgroundColor\n}) => {\n  if (type === \"internal\") {\n    return /*#__PURE__*/React.createElement(InternalButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"link\",\n      alt: `${alt}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, text));\n  } else if (type === \"external\") {} else if (type === \"action\") {}\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, \"Please pass a valid type of \\\"internal\\\", \\\"external\\\", or \\\"action\\\".\");\n};\n\nButton.propTypes = {\n  link: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  action: PropTypes.func,\n  alt: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\nexport default Button;","map":{"version":3,"sources":["/Users/xruiz/Downloads/builds2/src/components/UI/Button.jsx"],"names":["React","PropTypes","styled","InternalButton","button","props","backgroundColor","color","Button","link","type","action","alt","text","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAIA,MAAMC,cAAc,GAAGD,MAAM,CAACE,MAAO;;4BAETC,KAAK,IAAIA,KAAK,CAACC,eAAN,IAAyB,OAAQ;iBACrDD,KAAK,IAAIA,KAAK,CAACE,KAAN,IAAe,OAAQ;;CAHjD;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA,IAA1B;AAAgCN,EAAAA,KAAhC;AAAuCD,EAAAA;AAAvC,CAAD,KAA6D;AAGxE,MAAGI,IAAI,KAAK,UAAZ,EAAwB;AACpB,wBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,GAAG,EAAG,GAAEE,GAAI,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IADL,CADJ,CADJ;AAOH,GARD,MAQO,IAAIH,IAAI,KAAK,UAAb,EAAyB,CAE/B,CAFM,MAEA,IAAIA,IAAI,KAAK,QAAb,EAAuB,CAE7B;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAP;AACH,CAjBD;;AAmBAF,MAAM,CAACM,SAAP,GAAmB;AACfL,EAAAA,IAAI,EAAER,SAAS,CAACc,MADD;AAEfL,EAAAA,IAAI,EAAET,SAAS,CAACc,MAAV,CAAiBC,UAFR;AAGfL,EAAAA,MAAM,EAAEV,SAAS,CAACgB,IAHH;AAIfL,EAAAA,GAAG,EAAEX,SAAS,CAACc,MAAV,CAAiBC,UAJP;AAKfH,EAAAA,IAAI,EAAEZ,SAAS,CAACc,MAAV,CAAiBC,UALR;AAMfT,EAAAA,KAAK,EAAEN,SAAS,CAACc,MANF;AAOfT,EAAAA,eAAe,EAAEL,SAAS,CAACc;AAPZ,CAAnB;AAUA,eAAeP,MAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\";\n\n\n\nconst InternalButton = styled.button`\n    a {\n        background-color: ${props => props.backgroundColor || \"black\"}\n        color: ${props => props.color || \"white\"}\n    }\n`;\n\nconst Button = ({link, type, action, alt, text, color, backgroundColor}) => {\n    \n\n    if(type === \"internal\") {\n        return (\n            <InternalButton>\n                <a href=\"link\" alt={`${alt}`}>\n                    {text}\n                </a>\n            </InternalButton>\n        )\n    } else if (type === \"external\") {\n\n    } else if (type === \"action\") {\n\n    }\n    return <button>Please pass a valid type of \"internal\", \"external\", or \"action\".</button>\n}\n\nButton.propTypes = {\n    link: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    action: PropTypes.func,\n    alt: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    backgroundColor: PropTypes.string\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}