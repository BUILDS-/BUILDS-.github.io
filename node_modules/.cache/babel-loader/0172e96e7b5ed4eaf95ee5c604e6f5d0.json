{"ast":null,"code":"var _jsxFileName = \"/Users/xruiz/Downloads/builds2/src/components/UI/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nconst InternalButton = styled.button`\n    display: flex;\n    border: none;\n    padding: 0;\n    a {\n        background-color: ${props => props.backgroundColor || \"black\"};\n        color: ${props => props.color || \"white\"};\n        padding: 1em;\n        text-decoration: none;\n        border-radius: 20px;\n        transition: .2s ease-in-out;\n        &:hover {\n            background-color: ${props => props.backgroundColorHover || \"#CC0000\"};\n            color: ${props => props.colorHover || \"white\"};\n        }\n    }\n`;\nconst ActionButton = styled.button`\n    display: flex;\n    border: none;\n    padding: 1em;\n    background-color: ${props => props.backgroundColor || \"black\"};\n        color: ${props => props.color || \"white\"};\n`;\n\nconst Button = ({\n  link,\n  type,\n  action,\n  alt,\n  text,\n  color,\n  backgroundColor,\n  colorHover,\n  backgroundColorHover\n}) => {\n  if (type === \"internal\") {\n    return /*#__PURE__*/React.createElement(InternalButton, {\n      color: color,\n      backgroundColor: backgroundColor,\n      colorHover: colorHover,\n      backgroundColorHover: backgroundColorHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: link,\n      alt: `${alt}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, text));\n  } else if (type === \"external\") {} else if (type === \"action\") {\n    return /*#__PURE__*/React.createElement(InternalButton, {\n      color: color,\n      backgroundColor: backgroundColor,\n      colorHover: colorHover,\n      backgroundColorHover: backgroundColorHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, text);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, \"Please pass a valid type of \\\"internal\\\", \\\"external\\\", or \\\"action\\\".\");\n};\n\nButton.propTypes = {\n  link: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  action: PropTypes.func,\n  alt: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\nexport default Button;","map":{"version":3,"sources":["/Users/xruiz/Downloads/builds2/src/components/UI/Button.jsx"],"names":["React","PropTypes","styled","Link","InternalButton","button","props","backgroundColor","color","backgroundColorHover","colorHover","ActionButton","Button","link","type","action","alt","text","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAIA,MAAMC,cAAc,GAAGF,MAAM,CAACG,MAAO;;;;;4BAKTC,KAAK,IAAIA,KAAK,CAACC,eAAN,IAAyB,OAAQ;iBACrDD,KAAK,IAAIA,KAAK,CAACE,KAAN,IAAe,OAAQ;;;;;;gCAMjBF,KAAK,IAAIA,KAAK,CAACG,oBAAN,IAA8B,SAAU;qBAC5DH,KAAK,IAAIA,KAAK,CAACI,UAAN,IAAoB,OAAQ;;;CAb1D;AAkBA,MAAMC,YAAY,GAAGT,MAAM,CAACG,MAAO;;;;wBAIXC,KAAK,IAAIA,KAAK,CAACC,eAAN,IAAyB,OAAQ;iBACjDD,KAAK,IAAIA,KAAK,CAACE,KAAN,IAAe,OAAQ;CALjD;;AAQA,MAAMI,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA,IAA1B;AAAgCT,EAAAA,KAAhC;AAAuCD,EAAAA,eAAvC;AAAwDG,EAAAA,UAAxD;AAAoED,EAAAA;AAApE,CAAD,KAA+F;AAG1G,MAAGK,IAAI,KAAK,UAAZ,EAAwB;AACpB,wBACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEN,KAAvB;AAA8B,MAAA,eAAe,EAAED,eAA/C;AAAgE,MAAA,UAAU,EAAEG,UAA5E;AAAwF,MAAA,oBAAoB,EAAED,oBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEI,IAAV;AAAgB,MAAA,GAAG,EAAG,GAAEG,GAAI,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IADL,CADJ,CADJ;AAOH,GARD,MAQO,IAAIH,IAAI,KAAK,UAAb,EAAyB,CAE/B,CAFM,MAEA,IAAIA,IAAI,KAAK,QAAb,EAAuB;AAC1B,wBACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEN,KAAvB;AAA8B,MAAA,eAAe,EAAED,eAA/C;AAAgE,MAAA,UAAU,EAAEG,UAA5E;AAAwF,MAAA,oBAAoB,EAAED,oBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSQ,IADT,CADJ;AAKH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAP;AACH,CArBD;;AAuBAL,MAAM,CAACM,SAAP,GAAmB;AACfL,EAAAA,IAAI,EAAEZ,SAAS,CAACkB,MADD;AAEfL,EAAAA,IAAI,EAAEb,SAAS,CAACkB,MAAV,CAAiBC,UAFR;AAGfL,EAAAA,MAAM,EAAEd,SAAS,CAACoB,IAHH;AAIfL,EAAAA,GAAG,EAAEf,SAAS,CAACkB,MAAV,CAAiBC,UAJP;AAKfH,EAAAA,IAAI,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC,UALR;AAMfZ,EAAAA,KAAK,EAAEP,SAAS,CAACkB,MANF;AAOfZ,EAAAA,eAAe,EAAEN,SAAS,CAACkB;AAPZ,CAAnB;AAUA,eAAeP,MAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\n\n\nconst InternalButton = styled.button`\n    display: flex;\n    border: none;\n    padding: 0;\n    a {\n        background-color: ${props => props.backgroundColor || \"black\"};\n        color: ${props => props.color || \"white\"};\n        padding: 1em;\n        text-decoration: none;\n        border-radius: 20px;\n        transition: .2s ease-in-out;\n        &:hover {\n            background-color: ${props => props.backgroundColorHover || \"#CC0000\"};\n            color: ${props => props.colorHover || \"white\"};\n        }\n    }\n`;\n\nconst ActionButton = styled.button`\n    display: flex;\n    border: none;\n    padding: 1em;\n    background-color: ${props => props.backgroundColor || \"black\"};\n        color: ${props => props.color || \"white\"};\n`;\n\nconst Button = ({link, type, action, alt, text, color, backgroundColor, colorHover, backgroundColorHover}) => {\n    \n\n    if(type === \"internal\") {\n        return (\n            <InternalButton color={color} backgroundColor={backgroundColor} colorHover={colorHover} backgroundColorHover={backgroundColorHover}>\n                <Link to={link} alt={`${alt}`}>\n                    {text}\n                </Link>\n            </InternalButton>\n        )\n    } else if (type === \"external\") {\n\n    } else if (type === \"action\") {\n        return (\n            <InternalButton color={color} backgroundColor={backgroundColor} colorHover={colorHover} backgroundColorHover={backgroundColorHover}>                \n                    {text}\n            </InternalButton>\n        )\n    }\n    return <button>Please pass a valid type of \"internal\", \"external\", or \"action\".</button>\n}\n\nButton.propTypes = {\n    link: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    action: PropTypes.func,\n    alt: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    backgroundColor: PropTypes.string\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}